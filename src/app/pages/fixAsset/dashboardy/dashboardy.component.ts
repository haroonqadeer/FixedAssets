import { Component, OnInit } from "@angular/core";
import { Chart } from "angular-highcharts";
import {
  HttpClient,
  HttpHeaders,
  HttpErrorResponse,
} from "@angular/common/http";

declare var $: any;

@Component({
  selector: "app-dashboardy",
  templateUrl: "./dashboardy.component.html",
  styleUrls: ["./dashboardy.component.scss"],
})
export class DashboardyComponent implements OnInit {
  serverUrl = "http://95.217.147.105:2007/api/";

  loadingBar = true;
  itemPerPage = "10";
  p = 1;

  lblUserName = "";
  lblDate = "";
  lblTagSection = "";
  locationName = "";
  allLocation = "";
  comLocation = "";
  remLocation = "";
  allTags = "";
  cmbChartLocation = "";
  cmbTblLocation = "";
  cmbLocation = "";
  cmbOfcType = "";

  searchChartLocation = "";
  searchTblLocation = "";
  searchTag = "";
  searchLocation = "";
  searchTagOfc = "";
  searchTagLoc = "";

  ofcTypeList = [];
  assetDetailList = [];
  tempLocList = [];
  tempTagList = [];
  allLocDetList = [];
  compLocDetList = [];
  remLocDetList = [];
  tagDetList = [];
  tagDetDtWiseList = [];
  totalTagList = [];
  locList = [];
  chartAssetDetailList = [];
  computerList = [];
  drawingList = [];
  electricList = [];
  furnitureList = [];
  officeList = [];
  plantList = [];
  vehicleList = [];
  tagSecList = [];
  tagLocWiseList = [];
  tagNumList = [];
  tagUserList = [];
  tagUserDateList = [];

  test_chart: Chart;
  locationModalTitle: string;
  timeSeries_chart: Chart;

  chartData = [
    [1416441600000, 0.7976],
    [1416528000000, 0.8051],
    [1416787200000, 0.8059],
    [1416873600000, 0.805],
    [1416960000000, 0.8017],
    [1417046400000, 0.8014],
    [1417132800000, 0.8012],
    [1417392000000, 0.8021],
    [1417478400000, 0.805],
    [1417564800000, 0.8111],
    [1417651200000, 0.8124],
    [1417737600000, 0.809],
    [1417996800000, 0.8159],
    [1418083200000, 0.8086],
    [1418169600000, 0.8071],
    [1418256000000, 0.8047],
    [1418342400000, 0.8033],
    [1418601600000, 0.8049],
    [1418688000000, 0.7977],
    [1418774400000, 0.8034],
    [1418860800000, 0.8141],
    [1418947200000, 0.8145],
    [1419206400000, 0.8158],
    [1419292800000, 0.8189],
    [1419379200000, 0.8185],
    [1419811200000, 0.82],
    [1419897600000, 0.8225],
    [1419984000000, 0.8238],
    [1420156800000, 0.8305],
    [1420416000000, 0.8394],
    [1420502400000, 0.8394],
    [1420588800000, 0.8453],
    [1420675200000, 0.8499],
    [1420761600000, 0.8466],
    [1421020800000, 0.8473],
    [1421107200000, 0.8489],
    [1421193600000, 0.8494],
    [1421280000000, 0.8542],
    [1421366400000, 0.8631],
    [1421625600000, 0.8618],
    [1421712000000, 0.8637],
    [1421798400000, 0.8627],
    [1421884800000, 0.8608],
    [1421971200000, 0.8931],
    [1422230400000, 0.8895],
    [1422316800000, 0.8846],
    [1422403200000, 0.8816],
    [1422489600000, 0.8839],
    [1422576000000, 0.8847],
    [1422835200000, 0.8843],
    [1422921600000, 0.8791],
    [1423008000000, 0.8738],
    [1423094400000, 0.8765],
    [1423180800000, 0.8737],
    [1423440000000, 0.887],
    [1423526400000, 0.8853],
    [1423612800000, 0.884],
    [1423699200000, 0.8829],
    [1423785600000, 0.8788],
    [1424044800000, 0.8767],
    [1424131200000, 0.8761],
    [1424217600000, 0.8795],
    [1424304000000, 0.8783],
    [1424390400000, 0.8852],
    [1424649600000, 0.8852],
    [1424736000000, 0.8829],
    [1424822400000, 0.8815],
    [1424908800000, 0.8837],
    [1424995200000, 0.8898],
    [1425254400000, 0.8908],
    [1425340800000, 0.8955],
    [1425427200000, 0.8991],
    [1425513600000, 0.9035],
    [1425600000000, 0.9123],
    [1425859200000, 0.9209],
    [1425945600000, 0.9314],
    [1426032000000, 0.9455],
    [1426118400000, 0.9423],
    [1426204800000, 0.946],
    [1426464000000, 0.9473],
    [1426550400000, 0.9404],
    [1426636800000, 0.9442],
    [1426723200000, 0.9367],
    [1426809600000, 0.9281],
    [1427068800000, 0.9165],
    [1427155200000, 0.9133],
    [1427241600000, 0.9104],
    [1427328000000, 0.9114],
    [1427414400000, 0.9212],
    [1427673600000, 0.9222],
    [1427760000000, 0.9296],
    [1427846400000, 0.9299],
    [1427932800000, 0.9235],
    [1428364800000, 0.922],
    [1428451200000, 0.9207],
    [1428537600000, 0.9283],
    [1428624000000, 0.9462],
    [1428883200000, 0.9478],
    [1428969600000, 0.9467],
    [1429056000000, 0.9454],
    [1429142400000, 0.9337],
    [1429228800000, 0.9248],
    [1429488000000, 0.9327],
    [1429574400000, 0.9347],
    [1429660800000, 0.9309],
    [1429747200000, 0.9284],
    [1429833600000, 0.924],
    [1430092800000, 0.9241],
    [1430179200000, 0.9153],
    [1430265600000, 0.909],
    [1430352000000, 0.8918],
    [1430697600000, 0.8968],
    [1430784000000, 0.8996],
    [1430870400000, 0.8906],
    [1430956800000, 0.8847],
    [1431043200000, 0.8913],
    [1431302400000, 0.8976],
    [1431388800000, 0.8899],
    [1431475200000, 0.8913],
    [1431561600000, 0.8758],
    [1431648000000, 0.8829],
    [1431907200000, 0.8781],
    [1431993600000, 0.8946],
    [1432080000000, 0.8995],
    [1432166400000, 0.8983],
    [1432252800000, 0.8958],
    [1432512000000, 0.911],
    [1432598400000, 0.9153],
    [1432684800000, 0.9207],
    [1432771200000, 0.9179],
    [1432857600000, 0.9117],
    [1433116800000, 0.9138],
    [1433203200000, 0.9068],
    [1433289600000, 0.8982],
    [1433376000000, 0.8837],
    [1433462400000, 0.8915],
    [1433721600000, 0.896],
    [1433808000000, 0.8891],
    [1433894400000, 0.8867],
    [1433980800000, 0.8904],
    [1434067200000, 0.8914],
    [1434326400000, 0.8915],
    [1434412800000, 0.8918],
    [1434499200000, 0.8867],
    [1434585600000, 0.877],
    [1434672000000, 0.8851],
    [1434931200000, 0.8815],
    [1435017600000, 0.8926],
    [1435104000000, 0.8919],
    [1435190400000, 0.8925],
    [1435276800000, 0.8928],
    [1435536000000, 0.8983],
    [1435622400000, 0.8938],
    [1435708800000, 0.901],
    [1435795200000, 0.9038],
    [1435881600000, 0.9013],
    [1436140800000, 0.9085],
    [1436227200000, 0.9149],
    [1436313600000, 0.9072],
    [1436400000000, 0.9047],
    [1436486400000, 0.8942],
    [1436745600000, 0.9052],
    [1436832000000, 0.9066],
    [1436918400000, 0.9084],
    [1437004800000, 0.9203],
    [1437091200000, 0.9185],
    [1437350400000, 0.9216],
    [1437436800000, 0.9203],
    [1437523200000, 0.9174],
    [1437609600000, 0.9093],
    [1437696000000, 0.9143],
    [1437955200000, 0.9044],
    [1438041600000, 0.9071],
    [1438128000000, 0.9067],
    [1438214400000, 0.9129],
    [1438300800000, 0.9119],
    [1438560000000, 0.9133],
    [1438646400000, 0.9114],
    [1438732800000, 0.919],
    [1438819200000, 0.9188],
    [1438905600000, 0.9141],
    [1439164800000, 0.9125],
    [1439251200000, 0.9047],
    [1439337600000, 0.8966],
    [1439424000000, 0.9003],
    [1439510400000, 0.8953],
    [1439769600000, 0.901],
    [1439856000000, 0.9043],
    [1439942400000, 0.9058],
    [1440028800000, 0.8943],
    [1440115200000, 0.8865],
    [1440374400000, 0.8699],
    [1440460800000, 0.8692],
    [1440547200000, 0.8771],
    [1440633600000, 0.8863],
    [1440720000000, 0.8876],
    [1440979200000, 0.8918],
    [1441065600000, 0.8901],
    [1441152000000, 0.8886],
    [1441238400000, 0.8907],
    [1441324800000, 0.8979],
    [1441584000000, 0.8973],
    [1441670400000, 0.896],
    [1441756800000, 0.8978],
    [1441843200000, 0.8942],
    [1441929600000, 0.8876],
    [1442188800000, 0.8847],
    [1442275200000, 0.8835],
    [1442361600000, 0.8907],
    [1442448000000, 0.8841],
    [1442534400000, 0.8758],
    [1442793600000, 0.889],
    [1442880000000, 0.8966],
    [1442966400000, 0.897],
    [1443052800000, 0.8897],
    [1443139200000, 0.8969],
    [1443398400000, 0.8954],
    [1443484800000, 0.8926],
    [1443571200000, 0.8927],
    [1443657600000, 0.8967],
    [1443744000000, 0.8962],
    [1444003200000, 0.8901],
    [1444089600000, 0.891],
    [1444176000000, 0.8877],
    [1444262400000, 0.8887],
    [1444348800000, 0.8802],
    [1444608000000, 0.8794],
    [1444694400000, 0.8793],
    [1444780800000, 0.8765],
    [1444867200000, 0.8743],
    [1444953600000, 0.8804],
    [1445212800000, 0.8825],
    [1445299200000, 0.8794],
    [1445385600000, 0.8808],
    [1445472000000, 0.884],
    [1445558400000, 0.9023],
    [1445817600000, 0.9083],
    [1445904000000, 0.9042],
    [1445990400000, 0.9022],
    [1446076800000, 0.915],
    [1446163200000, 0.9078],
    [1446422400000, 0.9066],
    [1446508800000, 0.9112],
    [1446595200000, 0.9146],
    [1446681600000, 0.919],
    [1446768000000, 0.9206],
    [1447027200000, 0.9281],
    [1447113600000, 0.9337],
    [1447200000000, 0.9333],
    [1447286400000, 0.9324],
    [1447372800000, 0.9291],
    [1447632000000, 0.9327],
    [1447718400000, 0.9373],
    [1447804800000, 0.9377],
    [1447891200000, 0.9358],
    [1447977600000, 0.9357],
    [1448236800000, 0.9407],
    [1448323200000, 0.939],
    [1448409600000, 0.9447],
    [1448496000000, 0.9424],
    [1448582400000, 0.9453],
    [1448841600000, 0.9454],
    [1448928000000, 0.9435],
    [1449014400000, 0.9424],
    [1449100800000, 0.9372],
    [1449187200000, 0.9174],
    [1449446400000, 0.9253],
    [1449532800000, 0.9196],
    [1449619200000, 0.9141],
    [1449705600000, 0.9139],
    [1449792000000, 0.9133],
    [1450051200000, 0.9106],
    [1450137600000, 0.91],
    [1450224000000, 0.9148],
    [1450310400000, 0.9225],
    [1450396800000, 0.9229],
    [1450656000000, 0.9201],
    [1450742400000, 0.9132],
    [1450828800000, 0.9162],
    [1450915200000, 0.9136],
    [1451260800000, 0.9123],
    [1451347200000, 0.9132],
    [1451433600000, 0.9153],
    [1451520000000, 0.9186],
    [1451865600000, 0.9177],
    [1451952000000, 0.9307],
    [1452038400000, 0.931],
    [1452124800000, 0.9202],
    [1452211200000, 0.9208],
    [1452470400000, 0.9185],
    [1452556800000, 0.9229],
    [1452643200000, 0.9247],
    [1452729600000, 0.9181],
    [1452816000000, 0.9164],
    [1453075200000, 0.9182],
    [1453161600000, 0.9202],
    [1453248000000, 0.9169],
    [1453334400000, 0.9181],
    [1453420800000, 0.9253],
    [1453680000000, 0.9247],
    [1453766400000, 0.9229],
    [1453852800000, 0.9185],
    [1453939200000, 0.9173],
    [1454025600000, 0.9159],
    [1454284800000, 0.9189],
    [1454371200000, 0.9159],
    [1454457600000, 0.9148],
    [1454544000000, 0.8925],
    [1454630400000, 0.8928],
    [1454889600000, 0.9009],
    [1454976000000, 0.8901],
    [1455062400000, 0.8884],
    [1455148800000, 0.8814],
    [1455235200000, 0.887],
    [1455494400000, 0.8946],
    [1455580800000, 0.8957],
    [1455667200000, 0.8981],
    [1455753600000, 0.9023],
    [1455840000000, 0.9013],
    [1456099200000, 0.907],
    [1456185600000, 0.909],
    [1456272000000, 0.9108],
    [1456358400000, 0.907],
    [1456444800000, 0.9087],
    [1456704000000, 0.9185],
    [1456790400000, 0.9199],
    [1456876800000, 0.9212],
    [1456963200000, 0.9174],
    [1457049600000, 0.9117],
    [1457308800000, 0.9131],
    [1457395200000, 0.9069],
    [1457481600000, 0.9114],
    [1457568000000, 0.9212],
    [1457654400000, 0.9018],
    [1457913600000, 0.8995],
    [1458000000000, 0.9003],
    [1458086400000, 0.9039],
    [1458172800000, 0.8842],
    [1458259200000, 0.8867],
    [1458518400000, 0.8873],
    [1458604800000, 0.892],
    [1458691200000, 0.8953],
    [1458777600000, 0.8966],
    [1459209600000, 0.8934],
    [1459296000000, 0.8832],
    [1459382400000, 0.8784],
    [1459468800000, 0.8748],
    [1459728000000, 0.8788],
    [1459814400000, 0.8798],
    [1459900800000, 0.8822],
    [1459987200000, 0.8801],
    [1460073600000, 0.8801],
    [1460332800000, 0.8781],
    [1460419200000, 0.8776],
    [1460505600000, 0.8852],
    [1460592000000, 0.8888],
    [1460678400000, 0.8863],
    [1460937600000, 0.8846],
    [1461024000000, 0.8817],
    [1461110400000, 0.8789],
    [1461196800000, 0.8808],
    [1461283200000, 0.888],
    [1461542400000, 0.8879],
    [1461628800000, 0.8861],
    [1461715200000, 0.8848],
    [1461801600000, 0.8805],
    [1461888000000, 0.8771],
    [1462147200000, 0.8702],
    [1462233600000, 0.8645],
    [1462320000000, 0.8693],
    [1462406400000, 0.8743],
    [1462492800000, 0.8752],
    [1462752000000, 0.8777],
    [1462838400000, 0.8792],
    [1462924800000, 0.8766],
    [1463011200000, 0.8781],
    [1463097600000, 0.8813],
    [1463356800000, 0.8832],
    [1463443200000, 0.8836],
    [1463529600000, 0.8867],
    [1463616000000, 0.8932],
    [1463702400000, 0.8914],
    [1463961600000, 0.8918],
    [1464048000000, 0.8955],
    [1464134400000, 0.8973],
    [1464220800000, 0.8955],
    [1464307200000, 0.8955],
    [1464566400000, 0.8978],
    [1464652800000, 0.8966],
    [1464739200000, 0.895],
    [1464825600000, 0.8939],
    [1464912000000, 0.8966],
    [1465171200000, 0.8812],
    [1465257600000, 0.8813],
    [1465344000000, 0.879],
    [1465430400000, 0.8817],
    [1465516800000, 0.8847],
    [1465776000000, 0.8876],
    [1465862400000, 0.891],
    [1465948800000, 0.8906],
    [1466035200000, 0.895],
    [1466121600000, 0.8887],
    [1466380800000, 0.8826],
    [1466467200000, 0.884],
    [1466553600000, 0.8864],
    [1466640000000, 0.8781],
    [1466726400000, 0.9038],
    [1466985600000, 0.9094],
    [1467072000000, 0.9032],
    [1467158400000, 0.9018],
    [1467244800000, 0.9008],
    [1467331200000, 0.8982],
    [1467590400000, 0.8979],
    [1467676800000, 0.8973],
    [1467763200000, 0.9035],
    [1467849600000, 0.9026],
    [1467936000000, 0.9034],
    [1468195200000, 0.9052],
    [1468281600000, 0.9017],
    [1468368000000, 0.9033],
    [1468454400000, 0.8964],
    [1468540800000, 0.8987],
    [1468800000000, 0.9048],
    [1468886400000, 0.9063],
    [1468972800000, 0.9081],
    [1469059200000, 0.908],
    [1469145600000, 0.908],
    [1469404800000, 0.9107],
    [1469491200000, 0.9094],
    [1469577600000, 0.9099],
    [1469664000000, 0.9018],
    [1469750400000, 0.8999],
    [1470009600000, 0.8958],
    [1470096000000, 0.8935],
    [1470182400000, 0.893],
    [1470268800000, 0.8981],
    [1470355200000, 0.8965],
    [1470614400000, 0.9021],
    [1470700800000, 0.9028],
    [1470787200000, 0.8942],
    [1470873600000, 0.8967],
    [1470960000000, 0.8963],
    [1471219200000, 0.8946],
    [1471305600000, 0.8854],
    [1471392000000, 0.8869],
    [1471478400000, 0.8834],
    [1471564800000, 0.883],
    [1471824000000, 0.8846],
    [1471910400000, 0.882],
    [1471996800000, 0.8876],
    [1472083200000, 0.8858],
    [1472169600000, 0.8858],
    [1472428800000, 0.8954],
    [1472515200000, 0.8955],
    [1472601600000, 0.8984],
    [1472688000000, 0.8973],
    [1472774400000, 0.8935],
    [1473033600000, 0.8965],
    [1473120000000, 0.8962],
    [1473206400000, 0.89],
    [1473292800000, 0.8854],
    [1473379200000, 0.8876],
    [1473638400000, 0.8909],
    [1473724800000, 0.8892],
    [1473811200000, 0.8915],
    [1473897600000, 0.8887],
    [1473984000000, 0.8909],
    [1474243200000, 0.8958],
    [1474329600000, 0.8942],
    [1474416000000, 0.897],
    [1474502400000, 0.8899],
    [1474588800000, 0.8918],
    [1474848000000, 0.888],
    [1474934400000, 0.8914],
    [1475020800000, 0.891],
    [1475107200000, 0.8913],
    [1475193600000, 0.8961],
    [1475452800000, 0.8901],
    [1475539200000, 0.8961],
    [1475625600000, 0.8921],
    [1475712000000, 0.8942],
    [1475798400000, 0.8978],
    [1476057600000, 0.8962],
    [1476144000000, 0.9027],
    [1476230400000, 0.9075],
    [1476316800000, 0.9061],
    [1476403200000, 0.909],
    [1476662400000, 0.9097],
    [1476748800000, 0.9098],
    [1476835200000, 0.9109],
    [1476921600000, 0.9108],
    [1477008000000, 0.9187],
    [1477267200000, 0.9183],
    [1477353600000, 0.9199],
    [1477440000000, 0.9154],
    [1477526400000, 0.9153],
    [1477612800000, 0.9157],
    [1477872000000, 0.9137],
    [1477958400000, 0.9071],
    [1478044800000, 0.9014],
    [1478131200000, 0.9039],
    [1478217600000, 0.9016],
    [1478476800000, 0.9041],
    [1478563200000, 0.9061],
    [1478649600000, 0.9074],
    [1478736000000, 0.918],
    [1478822400000, 0.9172],
    [1479081600000, 0.928],
    [1479168000000, 0.929],
    [1479254400000, 0.9345],
    [1479340800000, 0.9332],
    [1479427200000, 0.9409],
    [1479686400000, 0.9407],
    [1479772800000, 0.942],
    [1479859200000, 0.9433],
    [1479945600000, 0.9481],
    [1480032000000, 0.9442],
    [1480291200000, 0.9446],
    [1480377600000, 0.9456],
    [1480464000000, 0.9404],
    [1480550400000, 0.9411],
    [1480636800000, 0.9398],
    [1480896000000, 0.9345],
    [1480982400000, 0.9317],
    [1481068800000, 0.9321],
    [1481155200000, 0.9293],
    [1481241600000, 0.9472],
    [1481500800000, 0.9439],
    [1481587200000, 0.9426],
    [1481673600000, 0.9396],
    [1481760000000, 0.9599],
    [1481846400000, 0.958],
    [1482105600000, 0.9596],
    [1482192000000, 0.965],
    [1482278400000, 0.9597],
    [1482364800000, 0.9576],
    [1482451200000, 0.9574],
    [1482796800000, 0.9575],
    [1482883200000, 0.9615],
    [1482969600000, 0.9568],
    [1483056000000, 0.9488],
    [1483315200000, 0.9557],
    [1483401600000, 0.963],
    [1483488000000, 0.9582],
    [1483574400000, 0.9524],
    [1483660800000, 0.9445],
    [1483920000000, 0.951],
    [1484006400000, 0.9464],
    [1484092800000, 0.9522],
    [1484179200000, 0.9365],
    [1484265600000, 0.9381],
    [1484524800000, 0.944],
    [1484611200000, 0.9361],
    [1484697600000, 0.9378],
    [1484784000000, 0.9375],
    [1484870400000, 0.9407],
    [1485129600000, 0.9334],
    [1485216000000, 0.9305],
    [1485302400000, 0.9309],
    [1485388800000, 0.9347],
    [1485475200000, 0.9363],
    [1485734400000, 0.9408],
    [1485820800000, 0.9299],
    [1485907200000, 0.9269],
    [1485993600000, 0.9253],
    [1486080000000, 0.9311],
    [1486339200000, 0.9336],
    [1486425600000, 0.9369],
    [1486512000000, 0.9377],
    [1486598400000, 0.9354],
    [1486684800000, 0.9409],
    [1486944000000, 0.9409],
    [1487030400000, 0.9415],
    [1487116800000, 0.9475],
    [1487203200000, 0.9389],
    [1487289600000, 0.9391],
    [1487548800000, 0.9421],
    [1487635200000, 0.9491],
    [1487721600000, 0.9513],
    [1487808000000, 0.9459],
    [1487894400000, 0.9427],
    [1488153600000, 0.9447],
    [1488240000000, 0.9438],
    [1488326400000, 0.9495],
    [1488412800000, 0.9512],
    [1488499200000, 0.9466],
    [1488758400000, 0.9442],
    [1488844800000, 0.9456],
    [1488931200000, 0.9474],
    [1489017600000, 0.9479],
    [1489104000000, 0.943],
    [1489363200000, 0.9379],
    [1489449600000, 0.9407],
    [1489536000000, 0.9415],
    [1489622400000, 0.9324],
    [1489708800000, 0.9315],
    [1489968000000, 0.9302],
    [1490054400000, 0.9259],
    [1490140800000, 0.9254],
    [1490227200000, 0.9272],
    [1490313600000, 0.9256],
    [1490572800000, 0.9185],
    [1490659200000, 0.921],
    [1490745600000, 0.9305],
    [1490832000000, 0.9315],
    [1490918400000, 0.9355],
    [1491177600000, 0.9381],
    [1491264000000, 0.939],
    [1491350400000, 0.9366],
    [1491436800000, 0.9377],
    [1491523200000, 0.9408],
    [1491782400000, 0.9455],
    [1491868800000, 0.9421],
    [1491955200000, 0.9431],
    [1492041600000, 0.9408],
    [1492473600000, 0.9363],
    [1492560000000, 0.9325],
    [1492646400000, 0.9308],
    [1492732800000, 0.9349],
    [1492992000000, 0.9219],
    [1493078400000, 0.9183],
    [1493164800000, 0.9181],
    [1493251200000, 0.9191],
    [1493337600000, 0.915],
    [1493683200000, 0.9163],
    [1493769600000, 0.9159],
    [1493856000000, 0.9153],
    [1493942400000, 0.9124],
    [1494201600000, 0.9143],
    [1494288000000, 0.9185],
    [1494374400000, 0.919],
    [1494460800000, 0.9209],
    [1494547200000, 0.9196],
    [1494806400000, 0.9115],
    [1494892800000, 0.9043],
    [1494979200000, 0.8996],
    [1495065600000, 0.8987],
    [1495152000000, 0.8946],
    [1495411200000, 0.8895],
    [1495497600000, 0.8918],
    [1495584000000, 0.8935],
    [1495670400000, 0.8918],
    [1495756800000, 0.8933],
    [1496016000000, 0.8939],
    [1496102400000, 0.8951],
    [1496188800000, 0.8913],
    [1496275200000, 0.8914],
    [1496361600000, 0.8916],
    [1496620800000, 0.8891],
    [1496707200000, 0.8884],
    [1496793600000, 0.8916],
    [1496880000000, 0.8907],
    [1496966400000, 0.8949],
    [1497225600000, 0.8913],
    [1497312000000, 0.8916],
    [1497398400000, 0.8927],
    [1497484800000, 0.8957],
    [1497571200000, 0.8956],
    [1497830400000, 0.893],
    [1497916800000, 0.8965],
    [1498003200000, 0.8972],
    [1498089600000, 0.8954],
    [1498176000000, 0.8951],
    [1498435200000, 0.894],
    [1498521600000, 0.8868],
    [1498608000000, 0.8792],
    [1498694400000, 0.8763],
    [1498780800000, 0.8764],
    [1499040000000, 0.8797],
    [1499126400000, 0.8809],
    [1499212800000, 0.8828],
    [1499299200000, 0.8784],
    [1499385600000, 0.8764],
    [1499644800000, 0.8783],
    [1499731200000, 0.8769],
    [1499817600000, 0.8735],
    [1499904000000, 0.876],
    [1499990400000, 0.8761],
    [1500249600000, 0.8725],
    [1500336000000, 0.8655],
    [1500422400000, 0.8672],
    [1500508800000, 0.8708],
    [1500595200000, 0.8591],
    [1500854400000, 0.8586],
    [1500940800000, 0.8552],
    [1501027200000, 0.8589],
    [1501113600000, 0.8552],
    [1501200000000, 0.8527],
    [1501459200000, 0.8528],
    [1501545600000, 0.8467],
    [1501632000000, 0.8455],
    [1501718400000, 0.8433],
    [1501804800000, 0.8427],
    [1502064000000, 0.8478],
    [1502150400000, 0.8466],
    [1502236800000, 0.8525],
    [1502323200000, 0.8525],
    [1502409600000, 0.8501],
    [1502668800000, 0.8478],
    [1502755200000, 0.8516],
    [1502841600000, 0.8541],
    [1502928000000, 0.855],
    [1503014400000, 0.8519],
    [1503273600000, 0.8504],
    [1503360000000, 0.8496],
    [1503446400000, 0.8476],
    [1503532800000, 0.8471],
    [1503619200000, 0.847],
    [1503878400000, 0.8387],
    [1503964800000, 0.8301],
    [1504051200000, 0.8393],
    [1504137600000, 0.8458],
    [1504224000000, 0.839],
    [1504483200000, 0.8401],
    [1504569600000, 0.8411],
    [1504656000000, 0.8383],
    [1504742400000, 0.8355],
    [1504828800000, 0.8293],
    [1505088000000, 0.8336],
    [1505174400000, 0.8381],
    [1505260800000, 0.8349],
    [1505347200000, 0.8415],
    [1505433600000, 0.836],
    [1505692800000, 0.8371],
    [1505779200000, 0.8354],
    [1505865600000, 0.8329],
    [1505952000000, 0.8401],
    [1506038400000, 0.8362],
    [1506297600000, 0.8428],
    [1506384000000, 0.8485],
    [1506470400000, 0.8518],
    [1506556800000, 0.8491],
    [1506643200000, 0.8471],
    [1506902400000, 0.8516],
    [1506988800000, 0.8509],
    [1507075200000, 0.8485],
    [1507161600000, 0.8517],
    [1507248000000, 0.8543],
    [1507507200000, 0.8515],
    [1507593600000, 0.8478],
    [1507680000000, 0.8454],
    [1507766400000, 0.8436],
    [1507852800000, 0.8468],
    [1508112000000, 0.8473],
    [1508198400000, 0.8505],
    [1508284800000, 0.8512],
    [1508371200000, 0.8451],
    [1508457600000, 0.8463],
    [1508716800000, 0.8519],
    [1508803200000, 0.8504],
    [1508889600000, 0.8486],
    [1508976000000, 0.8509],
    [1509062400000, 0.8618],
    [1509321600000, 0.8613],
    [1509408000000, 0.8594],
    [1509494400000, 0.8613],
    [1509580800000, 0.8588],
    [1509667200000, 0.858],
    [1509926400000, 0.8629],
    [1510012800000, 0.865],
    [1510099200000, 0.8629],
    [1510185600000, 0.8599],
    [1510272000000, 0.8582],
    [1510531200000, 0.858],
    [1510617600000, 0.8515],
    [1510704000000, 0.8447],
    [1510790400000, 0.8496],
    [1510876800000, 0.8479],
    [1511136000000, 0.8489],
    [1511222400000, 0.8535],
    [1511308800000, 0.8512],
    [1511395200000, 0.8441],
    [1511481600000, 0.8421],
    [1511740800000, 0.8368],
    [1511827200000, 0.8413],
    [1511913600000, 0.8456],
    [1512000000000, 0.8441],
    [1512086400000, 0.8415],
    [1512345600000, 0.8429],
    [1512432000000, 0.8442],
    [1512518400000, 0.8463],
    [1512604800000, 0.8486],
    [1512691200000, 0.8517],
    [1512950400000, 0.8478],
    [1513036800000, 0.85],
    [1513123200000, 0.8522],
    [1513209600000, 0.8443],
    [1513296000000, 0.8471],
    [1513555200000, 0.8479],
    [1513641600000, 0.8459],
    [1513728000000, 0.8443],
    [1513814400000, 0.8433],
    [1513900800000, 0.8438],
    [1514332800000, 0.8408],
    [1514419200000, 0.838],
    [1514505600000, 0.8339],
  ];

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    // Create the chart
    // this.testChart();
    this.getTagsSummary();
    this.getLocationDetail();
    this.getCompLocationDetail();
    this.getRemLocationDetail();
    this.getTagDetail();
    this.getTagDateWise();
    this.getLocation();
    this.getAssetDetail();
    this.getOfficeType();
    this.getChartAssetDetail();
    this.getTagSecWise();
    this.getTimeSeriesChart();
    this.getTagNumWise();
  }

  getTagNumWise() {
    this.loadingBar = true;
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "gettagsnumberwise", { headers: reqHeader })
      .subscribe((data: any) => {
        this.tagNumList = data;
        this.loadingBar = false;
      });
  }

  getTagUserWise(obj) {
    this.searchTag = "";
    this.lblUserName = obj.name;
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "gettagsuserwise?UserId=" + obj.userId, {
        headers: reqHeader,
      })
      .subscribe((data: any) => {
        this.tagUserList = data;
        this.tagUserList.reverse();
        $("#userTagDateWise").modal("show");
      });
  }

  getTagUserDateWise(obj) {
    this.searchTag = "";
    this.lblDate = obj.createdDate;
    var dt = this.convertDate(obj.createdDate);
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "gettagsuserdatewise?UserId=0&reqDate=" + dt, {
        headers: reqHeader,
      })
      .subscribe((data: any) => {
        this.tagUserDateList = data;
        $("#userTagDateWiseLocationWiseModal").modal("show");
      });
  }

  getOfficeType() {
    this.loadingBar = false;

    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getofctype", { headers: reqHeader })
      .subscribe((data: any) => {
        this.ofcTypeList = data;
        this.loadingBar = true;
      });
  }

  getChartAssetDetail() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getallassetdetaillocwisedashboard", {
        headers: reqHeader,
      })
      .subscribe((data: any) => {
        this.chartAssetDetailList = data;
        for (var i = 0; i < this.chartAssetDetailList.length; i++) {
          if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay == "PLANTS"
          ) {
            this.plantList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          } else if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay == "COMPUTERS"
          ) {
            this.computerList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          } else if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay ==
            "DRAWINGEQUIPMENT"
          ) {
            this.drawingList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          } else if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay ==
            "ELECTRICITEMS"
          ) {
            this.electricList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          } else if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay == "FURNITURES"
          ) {
            this.furnitureList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          } else if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay == "VEHICLES"
          ) {
            this.vehicleList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          } else if (
            this.chartAssetDetailList[i].accountsCatagoryDisplay ==
            "OFFICEEQUIPMENTS"
          ) {
            this.officeList.push([
              this.chartAssetDetailList[i].assetCatDescription,
              this.chartAssetDetailList[i].tagsCreated,
            ]);
          }
        }
        this.testChart();
      });
  }

  getAssetDetail() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getassetdetail", { headers: reqHeader })
      .subscribe((data: any) => {
        this.assetDetailList = data;
        this.assetDetailList.reverse();
      });
  }

  getAssetDetailLocOfcType() {
    if (this.cmbLocation != "" && this.cmbOfcType != "") {
      var reqHeader = new HttpHeaders({
        "Content-Type": "application/json",
        // Authorization: "Bearer " + Token,
      });

      this.http
        .get(
          this.serverUrl +
            "getassetdetail?UserId=0&SubLocID=" +
            this.cmbLocation +
            "&OfficeTypeID=" +
            this.cmbOfcType,
          { headers: reqHeader }
        )
        .subscribe((data: any) => {
          this.assetDetailList = data;
        });
    } else if (this.cmbLocation != "" && this.cmbOfcType == "") {
      var reqHeader = new HttpHeaders({
        "Content-Type": "application/json",
        // Authorization: "Bearer " + Token,
      });

      this.http
        .get(this.serverUrl + "getassetdetail?SubLocID=" + this.cmbLocation, {
          headers: reqHeader,
        })
        .subscribe((data: any) => {
          this.assetDetailList = data;
        });
    } else if (this.cmbLocation == "" && this.cmbOfcType != "") {
      var reqHeader = new HttpHeaders({
        "Content-Type": "application/json",
        // Authorization: "Bearer " + Token,
      });

      this.http
        .get(
          this.serverUrl + "getassetdetail?OfficeTypeID=" + this.cmbOfcType,
          { headers: reqHeader }
        )
        .subscribe((data: any) => {
          this.assetDetailList = data;
        });
    }
  }

  editLocationModalTitle(text) {
    this.searchTag = "";
    this.locationModalTitle = text;
    if (text == "Total Locations") {
      this.tempLocList = this.allLocDetList;
    } else if (text == "Completed Locations") {
      this.tempLocList = this.compLocDetList;
    } else if (text == "Remaining Locations") {
      this.tempLocList = this.remLocDetList;
    } else if (text == "Total Tags") {
      this.tempTagList = this.tagDetList;
    }
  }

  testChart() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getallassetdashboard", { headers: reqHeader })
      .subscribe((data: any) => {
        let chart = new Chart({
          chart: {
            type: "column",
          },
          title: {
            text: "Asset by Categories",
            // style: {
            //   color: "#ddd",
            // },
          },
          xAxis: {
            type: "category",
          },
          yAxis: {
            title: {
              text: "Total Number of Assets",
            },
          },
          legend: {
            enabled: false,
          },

          tooltip: {
            headerFormat:
              '<span style="font-size:11px">{series.name}</span><br>',
            pointFormat:
              '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> of total<br/>',
          },
          plotOptions: {
            series: {
              dataLabels: {
                enabled: true,
                format: "{y}",
              },
            },
          },
          series: [
            {
              name: data[0].totalTagsCreated,
              data: [
                {
                  name: "Computers",
                  y: data[0].computers,
                  drilldown: "Computers",
                },
                {
                  name: "Drawing Equipment",
                  y: data[0].drawingequipment,
                  drilldown: "Drawing Equipment",
                },
                {
                  name: "Electric Items",
                  y: data[0].electricitems,
                  drilldown: "Electric Items",
                },
                {
                  name: "Furnitures",
                  y: data[0].furnitures,
                  drilldown: "Furnitures",
                },
                {
                  name: "Office Equipements",
                  y: data[0].officeequipments,
                  drilldown: "Office Equipements",
                },
                {
                  name: "Plants",
                  y: data[0].plants,
                  drilldown: "Plants",
                },
                {
                  name: "Vehicles",
                  y: data[0].vehicles,
                  drilldown: "Vehicles",
                },
              ],
            },
          ],
          drilldown: {
            series: [
              {
                name: "Computers",
                id: "Computers",
                data: this.computerList,
              },
              {
                name: "Drawing Equipment",
                id: "Drawing Equipment",
                data: this.drawingList,
              },
              {
                name: "Electric Items",
                id: "Electric Items",
                data: this.electricList,
              },
              {
                name: "Furnitures",
                id: "Furnitures",
                data: this.furnitureList,
              },
              {
                name: "Office Equipements",
                id: "Office Equipements",
                data: this.officeList,
              },
              {
                name: "Plants",
                id: "Plants",
                data: this.plantList,
              },
              {
                name: "Vehicles",
                id: "Vehicles",
                data: this.vehicleList,
              },
            ],
          },
        });

        this.test_chart = chart;
      });
  }

  getTimeSeriesChart() {
    let chart = new Chart({
      chart: {
        type: "area",
      },
      // accessibility: {
      //     description: 'Image description: An area chart compares the nuclear stockpiles of the USA and the USSR/Russia between 1945 and 2017. The number of nuclear weapons is plotted on the Y-axis and the years on the X-axis. The chart is interactive, and the year-on-year stockpile levels can be traced for each country. The US has a stockpile of 6 nuclear weapons at the dawn of the nuclear age in 1945. This number has gradually increased to 369 by 1950 when the USSR enters the arms race with 6 weapons. At this point, the US starts to rapidly build its stockpile culminating in 32,040 warheads by 1966 compared to the USSR’s 7,089. From this peak in 1966, the US stockpile gradually decreases as the USSR’s stockpile expands. By 1978 the USSR has closed the nuclear gap at 25,393. The USSR stockpile continues to grow until it reaches a peak of 45,000 in 1986 compared to the US arsenal of 24,401. From 1986, the nuclear stockpiles of both countries start to fall. By 2000, the numbers have fallen to 10,577 and 21,000 for the US and Russia, respectively. The decreases continue until 2017 at which point the US holds 4,018 weapons compared to Russia’s 4,500.'
      // },
      title: {
        text: "Last Month Tags Data",
      },
      xAxis: {
        allowDecimals: false,
        labels: {
          formatter: function () {
            return this.value; // clean, unformatted number for year
          },
        },
        // accessibility: {
        //     rangeDescription: 'Range: 1940 to 2017.'
        // }
      },
      yAxis: {
        title: {
          text: "Total Tags",
        },
        labels: {
          formatter: function () {
            return this.value;
          },
        },
      },
      plotOptions: {
        area: {
          pointStart: 1,
          marker: {
            enabled: false,
            symbol: "circle",
            radius: 2,
            states: {
              hover: {
                enabled: true,
              },
            },
          },
        },
      },
      series: [
        {
          name: "Tags",
          data: [
            null,
            null,
            5,
            25,
            50,
            120,
            150,
            200,
            426,
            660,
            869,
            1060,
            1605,
            2471,
            3322,
            4238,
            5221,
            6129,
            7089,
            8339,
            9399,
            10538,
            11643,
            13092,
            14478,
            15915,
            17385,
            5500,
            4512,
            4502,
            4502,
            4500,
            4500,
          ],
        },
      ],
    });
    this.timeSeries_chart = chart;
  }

  getChartLocationWise() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(
        this.serverUrl +
          "getallassetlocwisedashboard?LocationID=" +
          this.cmbChartLocation,
        {
          headers: reqHeader,
        }
      )
      .subscribe((data: any) => {
        let chart = new Chart({
          chart: {
            type: "column",
          },
          title: {
            text: "Asset by Categories",
          },
          xAxis: {
            type: "category",
          },
          yAxis: {
            title: {
              text: "Total Number of Assets",
            },
          },
          legend: {
            enabled: false,
          },
          plotOptions: {
            series: {
              dataLabels: {
                enabled: true,
                format: "{point.y:.1f}%",
              },
            },
          },

          // tooltip: {
          //   headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
          //   pointFormat:
          //     '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>',
          // },

          series: [
            {
              name: data[0].totalTagsCreated,
              data: [
                {
                  name: "Computers",
                  y: data[0].computers,
                  // drilldown: "Chrome",
                },
                {
                  name: "Drawing Equipment",
                  y: data[0].drawingequipment,
                  // drilldown: "Firefox",
                },
                {
                  name: "Electric Items",
                  y: data[0].electricitems,
                  // drilldown: "Internet Explorer",
                },
                {
                  name: "Furnitures",
                  y: data[0].furnitures,
                  // drilldown: "Safari",
                },
                {
                  name: "Office Equipements",
                  y: data[0].officeequipments,
                  // drilldown: "Edge",
                },
                {
                  name: "Plants",
                  y: data[0].plants,
                  // drilldown: "Opera",
                },
                {
                  name: "Vehicles",
                  y: data[0].vehicles,
                  // drilldown: null,
                },
              ],
            },
          ],
          // drilldown: {
          //   series: [
          //     {
          //       name: "Chrome",
          //       id: "Chrome",
          //       data: [
          //         ["v65.0", 0.1],
          //         ["v64.0", 1.3],
          //         ["v63.0", 53.02],
          //         ["v62.0", 1.4],
          //         ["v61.0", 0.88],
          //         ["v60.0", 0.56],
          //         ["v59.0", 0.45],
          //         ["v58.0", 0.49],
          //         ["v57.0", 0.32],
          //         ["v56.0", 0.29],
          //         ["v55.0", 0.79],
          //         ["v54.0", 0.18],
          //         ["v51.0", 0.13],
          //         ["v49.0", 2.16],
          //         ["v48.0", 0.13],
          //         ["v47.0", 0.11],
          //         ["v43.0", 0.17],
          //         ["v29.0", 0.26],
          //       ],
          //     },
          //     {
          //       name: "Firefox",
          //       id: "Firefox",
          //       data: [
          //         ["v58.0", 1.02],
          //         ["v57.0", 7.36],
          //         ["v56.0", 0.35],
          //         ["v55.0", 0.11],
          //         ["v54.0", 0.1],
          //         ["v52.0", 0.95],
          //         ["v51.0", 0.15],
          //         ["v50.0", 0.1],
          //         ["v48.0", 0.31],
          //         ["v47.0", 0.12],
          //       ],
          //     },
          //     {
          //       name: "Internet Explorer",
          //       id: "Internet Explorer",
          //       data: [
          //         ["v11.0", 6.2],
          //         ["v10.0", 0.29],
          //         ["v9.0", 0.27],
          //         ["v8.0", 0.47],
          //       ],
          //     },
          //     {
          //       name: "Safari",
          //       id: "Safari",
          //       data: [
          //         ["v11.0", 3.39],
          //         ["v10.1", 0.96],
          //         ["v10.0", 0.36],
          //         ["v9.1", 0.54],
          //         ["v9.0", 0.13],
          //         ["v5.1", 0.2],
          //       ],
          //     },
          //     {
          //       name: "Edge",
          //       id: "Edge",
          //       data: [
          //         ["v16", 2.6],
          //         ["v15", 0.92],
          //         ["v14", 0.4],
          //         ["v13", 0.1],
          //       ],
          //     },
          //     {
          //       name: "Opera",
          //       id: "Opera",
          //       data: [
          //         ["v50.0", 0.96],
          //         ["v49.0", 0.82],
          //         ["v12.1", 0.14],
          //       ],
          //     },
          //   ],
          // },
        });

        this.test_chart = chart;
      });
  }

  getTagSecWise() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "gettagssectionwise", { headers: reqHeader })
      .subscribe((data: any) => {
        this.tagSecList = data;
        // this.tagSecList.reverse();
      });
  }

  getTagDateWise() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getalltagsdetaildatewise", { headers: reqHeader })
      .subscribe((data: any) => {
        this.totalTagList = data;
        this.totalTagList.reverse();
      });
  }

  getLocation() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getsubloc", { headers: reqHeader })
      .subscribe((data: any) => {
        this.locList = data;
      });
  }

  public convertDate(myDate) {
    var oldDate = new Date(myDate);
    var d = oldDate.getDate();
    var m = oldDate.getMonth();
    m += 1; // JavaScript months are 0-11
    var y = oldDate.getFullYear();

    var convertedDate = y + "-" + m + "-" + d;

    return convertedDate;
  }
  getTblDataLocWise() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(
        this.serverUrl +
          "gettagsdetaillocwise?LocationID=" +
          this.cmbTblLocation,
        {
          headers: reqHeader,
        }
      )
      .subscribe((data: any) => {
        this.totalTagList = data;
        this.totalTagList.reverse();
      });
  }

  getTagLocWise(item) {
    this.searchTag = "";
    this.lblTagSection = item.officeDescription;
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(
        this.serverUrl + "gettagslocationwise?OfficeSecID=" + item.officeSecID,
        {
          headers: reqHeader,
        }
      )
      .subscribe((data: any) => {
        this.tagLocWiseList = data;
        $("#sectionTagLocationWiseModal").modal("show");
      });
  }

  getTagDetailDateWise(item) {
    this.searchTag = "";
    var dt = this.convertDate(item.createdDate);
    if (this.cmbTblLocation == "") {
      this.locationName = dt;
      var reqHeader = new HttpHeaders({
        "Content-Type": "application/json",
        // Authorization: "Bearer " + Token,
      });

      this.http
        .get(this.serverUrl + "gettagsdetaildatewise?reqDate=" + dt, {
          headers: reqHeader,
        })
        .subscribe((data: any) => {
          this.tagDetDtWiseList = data;
          $("#officeTypeTagsDtWiseModal").modal("show");
        });
    } else if (this.cmbTblLocation != "") {
      for (var i = 0; i < this.locList.length; i++) {
        if (this.locList[i].subLocID == this.cmbTblLocation) {
          this.locationName =
            this.locList[i].subLocationDescription +
            " - " +
            this.locList[i].mainLocationDescription +
            " - " +
            this.locList[i].provinceName;
          i = this.locList.length + 1;
        }
      }

      var reqHeader = new HttpHeaders({
        "Content-Type": "application/json",
        // Authorization: "Bearer " + Token,
      });

      this.http
        .get(
          this.serverUrl +
            "gettagsdetaildatewise?reqDate=" +
            dt +
            "&LocationID=" +
            this.cmbTblLocation,
          { headers: reqHeader }
        )
        .subscribe((data: any) => {
          this.tagDetDtWiseList = data;
          $("#officeTypeTagsModal").modal("show");
        });
    }
  }

  getTagsSummary() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "gettagssummary", { headers: reqHeader })
      .subscribe((data: any) => {
        this.allLocation = data[0].allLocations;
        this.comLocation = data[0].completedLocations;
        this.remLocation = data[0].incompletelocations;
        this.allTags = data[0].totaltags;
      });
  }

  getLocationDetail() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getlocdetail", { headers: reqHeader })
      .subscribe((data: any) => {
        this.allLocDetList = data;
      });
  }

  getCompLocationDetail() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getcomplocdetail", { headers: reqHeader })
      .subscribe((data: any) => {
        this.compLocDetList = data;
      });
  }

  getRemLocationDetail() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "getincomplocdetail", { headers: reqHeader })
      .subscribe((data: any) => {
        this.remLocDetList = data;
      });
  }

  getTagDetail() {
    var reqHeader = new HttpHeaders({
      "Content-Type": "application/json",
      // Authorization: "Bearer " + Token,
    });

    this.http
      .get(this.serverUrl + "gettagsdetaildb", { headers: reqHeader })
      .subscribe((data: any) => {
        this.tagDetList = data;
      });
  }

  clear() {
    this.cmbOfcType = "";
    this.cmbChartLocation = "";
    this.cmbTblLocation = "";
    this.cmbLocation = "";

    this.testChart();
    this.getTagDateWise();
    this.getAssetDetail();
  }
}
